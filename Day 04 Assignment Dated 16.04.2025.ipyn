{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "eb6c21b8-188e-4029-b856-aa0babe255f9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "20"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a=20 # this is the scenario of Integear\n",
    "a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "19174f46-c4de-4285-a315-9319ada05b03",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "int"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(a)\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "d3262e30-bc34-4537-bf69-cf22fefc5f2c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "20.5"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a=20.50 # this is the case of float\n",
    "a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "76a5a7e7-a858-4b34-841d-6bb9af1c190d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "float"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(a)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "da1a1ab5-b184-498b-b485-a00b85838e51",
   "metadata": {},
   "source": [
    "#Integer Data Type"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "7c097168-7a38-4a5a-a255-f9ed45c26d22",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "45\n",
      "<class 'int'>\n"
     ]
    }
   ],
   "source": [
    "i=45\n",
    "print(i)\n",
    "print(type(i))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cc8a76d6-815a-45e7-9969-92461922c8f2",
   "metadata": {},
   "source": [
    "# Float Usecases\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "dfeb7cc1-385e-492f-ad92-5a565df1447a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "102.56"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "petrol=102.56\n",
    "petrol"
   ]
  },
  {
   "cell_type": "raw",
   "id": "77cab87f-be66-4b1a-b634-dfd70cc1917a",
   "metadata": {},
   "source": [
    "type(petrol)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "cde6778c-3f24-4eb6-9842-80eba4d559d4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "110.56"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pet=110.56\n",
    "pet"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "1c82cd9d-cbdf-4ded-8825-5ed36585e45c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "float"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(pet)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "d1da3c5b-9022-471d-8f76-70c3751d76bc",
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "cannot unpack non-iterable int object",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[10], line 1\u001b[0m\n\u001b[1;32m----> 1\u001b[0m i1,i2\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m10\u001b[39m\n\u001b[0;32m      2\u001b[0m i1,i2\n",
      "\u001b[1;31mTypeError\u001b[0m: cannot unpack non-iterable int object"
     ]
    }
   ],
   "source": [
    "i1,i2=10\n",
    "i1,i2\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "0b9ba0c9-21c0-48fa-9ac8-2e6c141a51a9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10\n",
      "20\n",
      "30\n",
      "400\n",
      "10\n",
      "2.0\n"
     ]
    }
   ],
   "source": [
    "i1,i2=10,20\n",
    "print(i1)\n",
    "print(i2)\n",
    "print(i2+i1)\n",
    "print(i2*i2)\n",
    "print(i2-i1)\n",
    "print(i2/i1)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "eead888c-bd69-48f1-8589-e875921f9fe6",
   "metadata": {},
   "source": [
    "# String Use Cases\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "346e5f7a-c276-4e08-8068-f0074da206d9",
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (3850329516.py, line 1)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;36m  Cell \u001b[1;32mIn[12], line 1\u001b[1;36m\u001b[0m\n\u001b[1;33m    s=naresh it\u001b[0m\n\u001b[1;37m             ^\u001b[0m\n\u001b[1;31mSyntaxError\u001b[0m\u001b[1;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "s=naresh it\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "3d4cfb64-71c7-41d6-9ea8-0a418c24a327",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 's' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[13], line 1\u001b[0m\n\u001b[1;32m----> 1\u001b[0m s\n",
      "\u001b[1;31mNameError\u001b[0m: name 's' is not defined"
     ]
    }
   ],
   "source": [
    "s\n",
    "\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "af721848-81eb-4dee-9947-7ae2a6ad6567",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'nareshit'"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "i='nareshit'\n",
    "i\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "62fe9136-663b-481d-9fa5-b00ad821f587",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "str"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(i)\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "4bb93f42-effd-411c-8d6b-e6a4a9fce514",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'nareshit'"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "s1=\"nareshit\"\n",
    "s1\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "4cc06b3b-5093-4e83-8fda-5c3e571e8610",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'naresh it \\n       data sceince'"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "s2= '''naresh it \n",
    "       data sceince'''\n",
    "s2\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "848224ad-fd84-479f-9c7d-0bddda4ff8eb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'nareshit'"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "s3='nareshit'\n",
    "s3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "88197ca4-e449-459e-9fd8-33b35a730210",
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax. Perhaps you forgot a comma? (252265758.py, line 1)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;36m  Cell \u001b[1;32mIn[20], line 1\u001b[1;36m\u001b[0m\n\u001b[1;33m    print(s{0})\u001b[0m\n\u001b[1;37m          ^\u001b[0m\n\u001b[1;31mSyntaxError\u001b[0m\u001b[1;31m:\u001b[0m invalid syntax. Perhaps you forgot a comma?\n"
     ]
    }
   ],
   "source": [
    "print(s{0})\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "d388fa6d-9980-4469-9942-e407a5cbc1cd",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 's' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[21], line 1\u001b[0m\n\u001b[1;32m----> 1\u001b[0m \u001b[38;5;28mprint\u001b[39m(s[\u001b[38;5;241m0\u001b[39m])\n",
      "\u001b[1;31mNameError\u001b[0m: name 's' is not defined"
     ]
    }
   ],
   "source": [
    "print(s[0])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "182e64ec-8ade-4845-b3e3-5ea618ae6972",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "n\n"
     ]
    }
   ],
   "source": [
    "print(s3[0])\n"
   ]
  },
  {
   "cell_type": "raw",
   "id": "0a168b24-2e66-48e4-ad28-3737f9994f3e",
   "metadata": {},
   "source": [
    "print(s3[-1])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "91d9e83a-eebf-4512-b4a5-41a99ff93029",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "t\n"
     ]
    }
   ],
   "source": [
    "print(s3[-1])\n"
   ]
  },
  {
   "cell_type": "raw",
   "id": "413e3283-8359-49ea-b209-1937eb9fc064",
   "metadata": {},
   "source": [
    "print(s3[-3])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "b843e277-6ea7-43d5-9664-eb67a5fb79c7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "h\n"
     ]
    }
   ],
   "source": [
    "print(s3[-3])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "cc10d4e7-2919-4687-8434-f439e526eb43",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 's' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[25], line 1\u001b[0m\n\u001b[1;32m----> 1\u001b[0m s[\u001b[38;5;241m2\u001b[39m:\u001b[38;5;241m5\u001b[39m]\n",
      "\u001b[1;31mNameError\u001b[0m: name 's' is not defined"
     ]
    }
   ],
   "source": [
    "s[2:5]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "1813597a-a042-48f3-b55b-6bd191f3f7b4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'res'"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "s3[2:5]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d00e9980-8676-45d0-9ea8-715ac5123c4b",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
